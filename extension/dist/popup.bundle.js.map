{"version":3,"file":"popup.bundle.js","sources":["../../popup.ts"],"sourcesContent":["// extension/popup.ts\n// Popup script with refactored manual paper tracking\n\nimport { PaperMetadata } from './papers/types';\n\nconsole.log('Popup script starting...');\n\n// Function to get paper data from background script\nasync function getCurrentPaper(): Promise<PaperMetadata | null> {\n  return new Promise((resolve) => {\n    chrome.runtime.sendMessage({type: 'getCurrentPaper'}, (response) => {\n      console.log('Got paper data from background:', response);\n      resolve(response as PaperMetadata | null);\n    });\n  });\n}\n\n// Interface for message response\ninterface MessageResponse {\n  success: boolean;\n  error?: string;\n  metadata?: PaperMetadata;\n}\n\n// Function to update UI with paper data\nfunction updateUI(paperData: PaperMetadata | null): void {\n  const titleElement = document.getElementById('paperTitle');\n  const authorsElement = document.getElementById('paperAuthors');\n  const statusElement = document.getElementById('status');\n  const manualLogSection = document.getElementById('manualLogSection');\n\n  if (!titleElement || !authorsElement || !statusElement || !manualLogSection) {\n    console.error('Required DOM elements not found');\n    return;\n  }\n\n  if (paperData) {\n    // Show detected paper data\n    titleElement.textContent = paperData.title || paperData.paperId;\n    authorsElement.textContent = paperData.authors;\n    statusElement.textContent = 'Paper tracked! Issue created on GitHub.';\n    \n    // Enable rating buttons\n    const thumbsUpButton = document.getElementById('thumbsUp') as HTMLButtonElement;\n    const thumbsDownButton = document.getElementById('thumbsDown') as HTMLButtonElement;\n    \n    if (thumbsUpButton && thumbsDownButton) {\n      thumbsUpButton.disabled = false;\n      thumbsDownButton.disabled = false;\n      \n      // Set active state on rating buttons\n      thumbsUpButton.classList.toggle('active', paperData.rating === 'thumbsup');\n      thumbsDownButton.classList.toggle('active', paperData.rating === 'thumbsdown');\n    }\n    \n    // Hide manual log section\n    manualLogSection.style.display = 'none';\n  } else {\n    // No paper detected - show manual log option\n    titleElement.textContent = 'No paper detected';\n    authorsElement.textContent = '';\n    statusElement.textContent = 'Current page not recognized as a paper';\n    \n    // Disable rating buttons\n    const thumbsUpButton = document.getElementById('thumbsUp') as HTMLButtonElement;\n    const thumbsDownButton = document.getElementById('thumbsDown') as HTMLButtonElement;\n    \n    if (thumbsUpButton && thumbsDownButton) {\n      thumbsUpButton.disabled = true;\n      thumbsDownButton.disabled = true;\n    }\n    \n    // Show manual log section\n    manualLogSection.style.display = 'block';\n  }\n}\n\n// Function to log current page as a paper (using content script extraction)\nasync function logCurrentPage(): Promise<void> {\n  console.log(\"attempting to log paper\");\n  \n  // Get the active tab\n  const tabs = await chrome.tabs.query({ active: true, currentWindow: true });\n  if (!tabs[0] || !tabs[0].id) {\n    const statusElement = document.getElementById('status');\n    if (statusElement) {\n      statusElement.textContent = 'Error: Could not access current tab';\n    }\n    return;\n  }\n  \n  // Show loading state\n  const statusElement = document.getElementById('status');\n  if (statusElement) {\n    statusElement.textContent = 'Extracting paper metadata...';\n  }\n  \n  // Send message to content script requesting extraction\n  chrome.tabs.sendMessage(tabs[0].id, { \n    type: 'extractPaperMetadata' \n  }, (response: MessageResponse) => {\n    if (chrome.runtime.lastError) {\n      // Handle error\n      if (statusElement) {\n        statusElement.textContent = 'Error: ' + chrome.runtime.lastError.message;\n      }\n      return;\n    }\n    \n    if (!response || !response.success || !response.metadata) {\n      // Handle extraction failure\n      if (statusElement) {\n        statusElement.textContent = 'Error: ' + (response?.error || 'Failed to extract metadata');\n      }\n      return;\n    }\n    \n    // Success - update UI\n    updateUI(response.metadata);\n    if (statusElement) {\n      statusElement.textContent = 'Paper tracked successfully!';\n    }\n    \n    // The content script has already:\n    // 1. Sent metadata to background script\n    // 2. Started a session if the tab is visible\n    \n    // Hide manual log section\n    const manualLogSection = document.getElementById('manualLogSection');\n    if (manualLogSection) {\n      manualLogSection.style.display = 'none';\n    }\n    \n    // Enable rating buttons\n    const thumbsUpButton = document.getElementById('thumbsUp') as HTMLButtonElement;\n    const thumbsDownButton = document.getElementById('thumbsDown') as HTMLButtonElement;\n    if (thumbsUpButton && thumbsDownButton) {\n      thumbsUpButton.disabled = false;\n      thumbsDownButton.disabled = false;\n    }\n  });\n}\n\n// Initialize popup\ndocument.addEventListener('DOMContentLoaded', async () => {\n  console.log('Popup opened');\n  \n  // Get paper from the session tracker\n  let paperData: PaperMetadata | null = null;\n  let retries = 3;\n  \n  while (retries > 0 && !paperData) {\n    paperData = await getCurrentPaper();\n    if (!paperData) {\n      await new Promise(resolve => setTimeout(resolve, 500)); // Wait 500ms before retry\n      retries--;\n    }\n  }\n  \n  updateUI(paperData);\n  \n  // Set up rating handlers\n  const thumbsUpButton = document.getElementById('thumbsUp');\n  if (thumbsUpButton) {\n    thumbsUpButton.addEventListener('click', () => {\n      chrome.runtime.sendMessage({\n        type: 'updateRating',\n        rating: 'thumbsup'\n      }, (response: MessageResponse) => {\n        const statusElement = document.getElementById('status');\n        const thumbsUpButton = document.getElementById('thumbsUp');\n        const thumbsDownButton = document.getElementById('thumbsDown');\n        \n        if (!statusElement || !thumbsUpButton || !thumbsDownButton) return;\n        \n        if (response && response.success) {\n          statusElement.textContent = 'Rating updated to: thumbs up';\n          thumbsUpButton.classList.add('active');\n          thumbsDownButton.classList.remove('active');\n          setTimeout(() => window.close(), 1500);\n        } else {\n          statusElement.textContent = 'Error: ' + (response?.error || 'Unknown error');\n        }\n      });\n    });\n  }\n  \n  const thumbsDownButton = document.getElementById('thumbsDown');\n  if (thumbsDownButton) {\n    thumbsDownButton.addEventListener('click', () => {\n      chrome.runtime.sendMessage({\n        type: 'updateRating',\n        rating: 'thumbsdown'\n      }, (response: MessageResponse) => {\n        const statusElement = document.getElementById('status');\n        const thumbsUpButton = document.getElementById('thumbsUp');\n        const thumbsDownButton = document.getElementById('thumbsDown');\n        \n        if (!statusElement || !thumbsUpButton || !thumbsDownButton) return;\n        \n        if (response && response.success) {\n          statusElement.textContent = 'Rating updated to: thumbs down';\n          thumbsDownButton.classList.add('active');\n          thumbsUpButton.classList.remove('active');\n          setTimeout(() => window.close(), 1500);\n        } else {\n          statusElement.textContent = 'Error: ' + (response?.error || 'Unknown error');\n        }\n      });\n    });\n  }\n  \n  // Set up one-click logging button\n  const logPageButton = document.getElementById('logPageButton');\n  if (logPageButton) {\n    console.log(\"Attaching logPageButton event listener...\");\n    logPageButton.addEventListener('click', () => {\n      console.log(\"logPageButton clicked...\");\n      logCurrentPage();\n    });\n  }\n});\n"],"names":[],"mappings":"AAAA;AACA;AAIA,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;AAExC;AACA,eAAe,eAAe,GAAA;AAC5B,IAAA,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,KAAI;AAC7B,QAAA,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,EAAC,IAAI,EAAE,iBAAiB,EAAC,EAAE,CAAC,QAAQ,KAAI;AACjE,YAAA,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,QAAQ,CAAC,CAAC;YACzD,OAAO,CAAC,QAAgC,CAAC,CAAC;AAC5C,SAAC,CAAC,CAAC;AACL,KAAC,CAAC,CAAC;AACL,CAAC;AASD;AACA,SAAS,QAAQ,CAAC,SAA+B,EAAA;IAC/C,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;IAC3D,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;IAC/D,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IACxD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;AAErE,IAAA,IAAI,CAAC,YAAY,IAAI,CAAC,cAAc,IAAI,CAAC,aAAa,IAAI,CAAC,gBAAgB,EAAE;AAC3E,QAAA,OAAO,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACjD,OAAO;KACR;IAED,IAAI,SAAS,EAAE;;QAEb,YAAY,CAAC,WAAW,GAAG,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,OAAO,CAAC;AAChE,QAAA,cAAc,CAAC,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC;AAC/C,QAAA,aAAa,CAAC,WAAW,GAAG,yCAAyC,CAAC;;QAGtE,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAsB,CAAC;QAChF,MAAM,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAsB,CAAC;AAEpF,QAAA,IAAI,cAAc,IAAI,gBAAgB,EAAE;AACtC,YAAA,cAAc,CAAC,QAAQ,GAAG,KAAK,CAAC;AAChC,YAAA,gBAAgB,CAAC,QAAQ,GAAG,KAAK,CAAC;;AAGlC,YAAA,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC;AAC3E,YAAA,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,MAAM,KAAK,YAAY,CAAC,CAAC;SAChF;;AAGD,QAAA,gBAAgB,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;KACzC;SAAM;;AAEL,QAAA,YAAY,CAAC,WAAW,GAAG,mBAAmB,CAAC;AAC/C,QAAA,cAAc,CAAC,WAAW,GAAG,EAAE,CAAC;AAChC,QAAA,aAAa,CAAC,WAAW,GAAG,wCAAwC,CAAC;;QAGrE,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAsB,CAAC;QAChF,MAAM,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAsB,CAAC;AAEpF,QAAA,IAAI,cAAc,IAAI,gBAAgB,EAAE;AACtC,YAAA,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC/B,YAAA,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC;SAClC;;AAGD,QAAA,gBAAgB,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;KAC1C;AACH,CAAC;AAED;AACA,eAAe,cAAc,GAAA;AAC3B,IAAA,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;;AAGvC,IAAA,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;AAC5E,IAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;QAC3B,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,aAAa,EAAE;AACjB,YAAA,aAAa,CAAC,WAAW,GAAG,qCAAqC,CAAC;SACnE;QACD,OAAO;KACR;;IAGD,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IACxD,IAAI,aAAa,EAAE;AACjB,QAAA,aAAa,CAAC,WAAW,GAAG,8BAA8B,CAAC;KAC5D;;IAGD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;AAClC,QAAA,IAAI,EAAE,sBAAsB;KAC7B,EAAE,CAAC,QAAyB,KAAI;AAC/B,QAAA,IAAI,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE;;YAE5B,IAAI,aAAa,EAAE;AACjB,gBAAA,aAAa,CAAC,WAAW,GAAG,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC;aAC1E;YACD,OAAO;SACR;AAED,QAAA,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;;YAExD,IAAI,aAAa,EAAE;AACjB,gBAAA,aAAa,CAAC,WAAW,GAAG,SAAS,IAAI,QAAQ,EAAE,KAAK,IAAI,4BAA4B,CAAC,CAAC;aAC3F;YACD,OAAO;SACR;;AAGD,QAAA,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC5B,IAAI,aAAa,EAAE;AACjB,YAAA,aAAa,CAAC,WAAW,GAAG,6BAA6B,CAAC;SAC3D;;;;;QAOD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;QACrE,IAAI,gBAAgB,EAAE;AACpB,YAAA,gBAAgB,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;SACzC;;QAGD,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAsB,CAAC;QAChF,MAAM,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAsB,CAAC;AACpF,QAAA,IAAI,cAAc,IAAI,gBAAgB,EAAE;AACtC,YAAA,cAAc,CAAC,QAAQ,GAAG,KAAK,CAAC;AAChC,YAAA,gBAAgB,CAAC,QAAQ,GAAG,KAAK,CAAC;SACnC;AACH,KAAC,CAAC,CAAC;AACL,CAAC;AAED;AACA,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;AACvD,IAAA,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;;IAG5B,IAAI,SAAS,GAAyB,IAAI,CAAC;IAC3C,IAAI,OAAO,GAAG,CAAC,CAAC;AAEhB,IAAA,OAAO,OAAO,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE;AAChC,QAAA,SAAS,GAAG,MAAM,eAAe,EAAE,CAAC;QACpC,IAAI,CAAC,SAAS,EAAE;AACd,YAAA,MAAM,IAAI,OAAO,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;AACvD,YAAA,OAAO,EAAE,CAAC;SACX;KACF;IAED,QAAQ,CAAC,SAAS,CAAC,CAAC;;IAGpB,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;IAC3D,IAAI,cAAc,EAAE;AAClB,QAAA,cAAc,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAK;AAC5C,YAAA,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC;AACzB,gBAAA,IAAI,EAAE,cAAc;AACpB,gBAAA,MAAM,EAAE,UAAU;aACnB,EAAE,CAAC,QAAyB,KAAI;gBAC/B,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;gBACxD,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;gBAC3D,MAAM,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;AAE/D,gBAAA,IAAI,CAAC,aAAa,IAAI,CAAC,cAAc,IAAI,CAAC,gBAAgB;oBAAE,OAAO;AAEnE,gBAAA,IAAI,QAAQ,IAAI,QAAQ,CAAC,OAAO,EAAE;AAChC,oBAAA,aAAa,CAAC,WAAW,GAAG,8BAA8B,CAAC;AAC3D,oBAAA,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACvC,oBAAA,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBAC5C,UAAU,CAAC,MAAM,MAAM,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,CAAC;iBACxC;qBAAM;AACL,oBAAA,aAAa,CAAC,WAAW,GAAG,SAAS,IAAI,QAAQ,EAAE,KAAK,IAAI,eAAe,CAAC,CAAC;iBAC9E;AACH,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;IAED,MAAM,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;IAC/D,IAAI,gBAAgB,EAAE;AACpB,QAAA,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAK;AAC9C,YAAA,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC;AACzB,gBAAA,IAAI,EAAE,cAAc;AACpB,gBAAA,MAAM,EAAE,YAAY;aACrB,EAAE,CAAC,QAAyB,KAAI;gBAC/B,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;gBACxD,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;gBAC3D,MAAM,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;AAE/D,gBAAA,IAAI,CAAC,aAAa,IAAI,CAAC,cAAc,IAAI,CAAC,gBAAgB;oBAAE,OAAO;AAEnE,gBAAA,IAAI,QAAQ,IAAI,QAAQ,CAAC,OAAO,EAAE;AAChC,oBAAA,aAAa,CAAC,WAAW,GAAG,gCAAgC,CAAC;AAC7D,oBAAA,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACzC,oBAAA,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBAC1C,UAAU,CAAC,MAAM,MAAM,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,CAAC;iBACxC;qBAAM;AACL,oBAAA,aAAa,CAAC,WAAW,GAAG,SAAS,IAAI,QAAQ,EAAE,KAAK,IAAI,eAAe,CAAC,CAAC;iBAC9E;AACH,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;;IAGD,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;IAC/D,IAAI,aAAa,EAAE;AACjB,QAAA,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;AACzD,QAAA,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAK;AAC3C,YAAA,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;AACxC,YAAA,cAAc,EAAE,CAAC;AACnB,SAAC,CAAC,CAAC;KACJ;AACH,CAAC,CAAC"}